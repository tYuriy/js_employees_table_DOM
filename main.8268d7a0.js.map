{"version":3,"sources":["scripts/main.js"],"names":["body","document","querySelector","tableHeaders","tableBody","isAsc","defaultIndex","addEventListener","e","tableRows","querySelectorAll","sortData","target","cellIndex","arr","index","sort","a","b","prev","children","innerText","trim","next","getNumber","localeCompare","x","append","data","replace","Array","from","forEach","el","classList","remove","closest","add","form","createElement","fieldsList","text","element","type","i","length","labelElement","textNode","createTextNode","inputElement","name","setAttribute","dataset","qa","appendChild","options","selectInput","optionElement","button","preventDefault","nameValidation","textFieldValidation","firstElementChild","value","positionValidation","ageCheck","ageValidation","salaryValidation","newRow","newData","elementValue","Intl","NumberFormat","format","prepend","reset","pushNotification","str","min","max","posTop","posRight","title","description","notification","style","boxSizing","innerHTML","top","right","setTimeout","cellWidth","getComputedStyle","width","currentCell","nodeName","input","innerTextNode","firstChild","textContent","focus","tempText","includes","code","blur"],"mappings":"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","file":"main.8268d7a0.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\nconst tableHeaders = document.querySelector('thead');\nconst tableBody = document.querySelector('tbody');\n\nlet isAsc = true;\nlet defaultIndex = -1;\n\ntableHeaders.addEventListener('click', (e) => {\n  const tableRows = tableBody.querySelectorAll('tr');\n\n  sortData([...tableRows], e.target.cellIndex);\n});\n\nconst sortData = (arr, index) => {\n  isAsc = index !== defaultIndex || !isAsc;\n  defaultIndex = index;\n\n  arr.sort((a, b) => {\n    let prev = a.children[index].innerText.trim();\n    let next = b.children[index].innerText.trim();\n\n    if (!isAsc) {\n      [prev, next] = [next, prev];\n    }\n\n    if (getNumber(prev)) {\n      return getNumber(prev) - getNumber(next);\n    } else {\n      return prev.localeCompare(next);\n    }\n  });\n\n  for (const x of arr) {\n    tableBody.append(x);\n  }\n};\n\nconst getNumber = (data) => data.replace(/\\D/g, '');\n\ntableBody.addEventListener('click', e => {\n  Array.from(tableBody.children).forEach(el => {\n    el.classList.remove('active');\n  });\n  e.target.closest('tr').classList.add('active');\n});\n\nconst form = document.createElement('form');\n\nconst fieldsList = [\n  {\n    text: 'Name:', 'data-qa': 'name', element: 'input', type: 'text',\n  }, {\n    text: 'Position:', 'data-qa': 'position', element: 'input', type: 'text',\n  }, {\n    text: 'Office:', 'data-qa': 'office', element: 'select', type: 'text',\n  }, {\n    text: 'Age:', 'data-qa': 'age', element: 'input', type: 'number',\n  }, {\n    text: 'Salary:', 'data-qa': 'salary', element: 'input', type: 'number',\n  },\n];\n\nfor (let i = 0; i < fieldsList.length; i++) {\n  const labelElement = document.createElement('label');\n  const textNode = document.createTextNode(fieldsList[i].text);\n  const inputElement = document.createElement(fieldsList[i].element);\n\n  inputElement.name = fieldsList[i]['data-qa'];\n  inputElement.setAttribute('type', fieldsList[i].type);\n  inputElement.setAttribute('required', true);\n\n  inputElement.dataset.qa = fieldsList[i]['data-qa'];\n\n  labelElement.appendChild(textNode);\n  labelElement.append(inputElement);\n  form.append(labelElement);\n}\n\nform.classList.add('new-employee-form');\nbody.append(form);\n\nconst options = ['Tokyo', 'Singapore', 'London',\n  'New York', 'Edinburgh', 'San Francisco'];\n\nconst selectInput = document.querySelector('select');\n\nfor (let i = 0; i < options.length; i++) {\n  const optionElement = document.createElement('option');\n  const textNode = document.createTextNode(options[i]);\n\n  optionElement.appendChild(textNode);\n  selectInput.append(optionElement);\n};\n\nconst button = document.createElement('button');\n\nbutton.appendChild(document.createTextNode('Save to table'));\nform.append(button);\n\nbutton.addEventListener('click', e => {\n  e.preventDefault();\n\n  const nameValidation\n    = textFieldValidation(form.children[0].firstElementChild.value, 4);\n  const positionValidation\n    = textFieldValidation(form.children[1].firstElementChild.value, 1);\n  const ageCheck\n    = ageValidation(form.children[3].firstElementChild.value, 18, 90);\n  const salaryValidation\n    = textFieldValidation(form.children[4].firstElementChild.value, 1);\n\n  if (!nameValidation) {\n    pushNotification(10, 10, 'Name error!',\n      'Name field should have at least 4 characters');\n  } else if (!positionValidation) {\n    pushNotification(10, 10, 'Position error!',\n      'Position field should not be empty');\n  } else if (!ageCheck) {\n    pushNotification(10, 10, 'Age error!',\n      'Age should be between 18 and 90');\n  } else if (!salaryValidation) {\n    pushNotification(10, 10, 'Salary error!',\n      'Salary field should not be empty');\n  } else {\n    const newRow = document.createElement('tr');\n\n    for (let i = 0; i < form.children.length - 1; i++) {\n      const newData = document.createElement('td');\n      const elementValue = form.children[i].firstElementChild.value;\n\n      if (i !== 4) {\n        newData.innerText = elementValue;\n      } else {\n        newData.innerText\n          = '$' + new Intl.NumberFormat('us-US').format(elementValue);\n      }\n      newRow.append(newData);\n    }\n\n    tableBody.prepend(newRow);\n    form.reset();\n\n    pushNotification(10, 10, 'New record was added',\n      'Success. All data was successfully added to DB.', 'success');\n  }\n});\n\nconst textFieldValidation = (str, min) => {\n  return str.length >= min;\n};\n\nconst ageValidation = (value, min, max) => {\n  return +value >= min && +value <= max;\n};\n\nconst pushNotification = (posTop, posRight, title, description, type) => {\n  const notification = document.createElement('div');\n\n  notification.style.boxSizing = 'content-box';\n  notification.classList.add(`notification`, type);\n  notification.dataset.qa = 'notification';\n\n  notification.innerHTML = `\n    <h2 class=\"title\">${title}</h2>\n    <p>${description}</p>\n  `;\n\n  notification.style.top = `${posTop}px`;\n  notification.style.right = `${posRight}px`;\n\n  document.body.append(notification);\n\n  setTimeout(() => (notification.remove()), 2000);\n};\n\ntableBody.addEventListener('dblclick', e => {\n  const cellWidth = getComputedStyle(e.target).width;\n  const currentCell = e.target;\n\n  if (currentCell.nodeName === 'TD') {\n    const input = document.createElement('input');\n    const innerTextNode = currentCell.firstChild;\n\n    input.classList.add('cell-input');\n    input.value = innerTextNode.textContent;\n    innerTextNode.remove();\n\n    currentCell.append(input);\n    input.focus();\n    input.setAttribute('width', 20);\n    input.style.width = cellWidth;\n\n    input.addEventListener('blur', () => {\n      const tempText = input.value || innerTextNode.textContent;\n\n      innerTextNode.textContent = tempText;\n      currentCell.append(innerTextNode);\n      input.remove();\n    });\n\n    input.addEventListener('keydown', function ss(x) {\n      if (['Enter', 'NumpadEnter'].includes(x.code)) {\n        input.blur();\n      }\n    });\n  }\n});\n"]}